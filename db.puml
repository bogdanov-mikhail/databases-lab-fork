@startuml
left to right direction
skinparam roundcorner 5
skinparam shadowing false

skinparam class {
    BackgroundColor white
    ArrowColor #2688d4
    BorderColor #2688d4
}

!define primary_key(x) <b><color:#b8861b><&key></color> x</b>
!define foreign_key(x) <color:#aaaaaa><&key></color> x
!define column(x) <color:#efefef><&media-record></color> x
!define table(x) entity x << (T, white) >>

table(client) {
    primary_key(id): UUID
    --
    column(first_name): VARCHAR
    column(last_name): VARCHAR
    column(phone_number): VARCHAR
}

table(payment_method) {
    primary_key(id): UUID
    --
    column(card_number): INTEGER
    column(card_owner): VARCHAR
    column(expiry_date): DATETIME
    column(cvc): INTEGER
    foreign_key(client_id): UUID
}

table(payment_info) {
    primary_key(id): UUID
    --
    foreign_key(payment_method_id): UUID
    foreign_key(order_id): UUID
}

table(item) {
    primary_key(id): UUID
    --
    column(name): VARCHAR
    column(price): DECIMAL
}

table(group) {
    primary_key(id): UUID
    --
    column(name): VARCHAR
}

table(item_group) {
    primary_key(id): UUID
    --
    foreign_key(item_id): UUID
    foreign_key(group_id): UUID
}

table(order) {
    primary_key(id): UUID
    --
    foreign_key(client_id): UUID
    foreign_key(sale_point_id): UUID
}

table(order_item) {
    primary_key(id): UUID
    --
    foreign_key(order_id): UUID
    foreign_key(item_id): UUID
}

table(sale_point) {
    primary_key(id): UUID
    --
    foreign_key(address_id): UUID
}

table(sale_point_item) {
    primary_key(id): UUID
    --
    foreign_key(sale_point_id): UUID
    foreign_key(item_id): UUID
}

table(country) {
    primary_key(id): UUID
    --
    column(name): VARCHAR
}

table(city) {
    primary_key(id): UUID
    --
    column(name): VARCHAR
    foreign_key(country_id): UUID
}

table(street) {
    primary_key(id): UUID
    --
    column(name): VARCHAR
    foreign_key(city_id): UUID
}

table(address) {
    primary_key(id): UUID
    --
    foreign_key(street_id): UUID
    column(house_number): VARCHAR
    column(postcode): INTEGER
}

table(employee) {
    primary_key(id): UUID
    --
    column(first_name): VARCHAR
    column(last_name): VARCHAR
    foreign_key(position_id): UUID
    foreign_key(sale_point_id): UUID
}

table(employee_position) {
    primary_key(id): UUID
    --
    column(name): VARCHAR
}

table(schedule) {
    primary_key(id): UUID
    --
    column(from_time): TIME
    column(to_time): TIME
    column(is_break_time): BOOLEAN
    column(weekday): ENUM
    foreign_key(sale_point_id): UUID
}

sale_point::id --> sale_point_item::sale_point_id
item::id --> sale_point_item::item_id

payment_method::id --> payment_info::payment_method_id
order::id --> payment_info::order_id

client::id --> payment_method::client_id

order::id --> order_item::order_id
item::id --> order_item::item_id

item::id --> item_group::item_id
group::id --> item_group::group_id

order::sale_point_id --> sale_point::id

sale_point::address_id --> address:id

city::country_id --> country::id

street::city_id --> city::id

address::street_id --> street::id

employee::position_id --> employee_position::id
employee::sale_point --> sale_point::id

schedule::sale_point_id --> sale_point::id

@enduml
